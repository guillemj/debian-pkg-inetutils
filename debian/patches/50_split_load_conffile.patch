From 7cc1fba608d2d4a9c378f90a91cbd19646a15fd7 Mon Sep 17 00:00:00 2001
From: Guillem Jover <guillem@hadrons.org>
Date: Wed, 20 Feb 2008 05:23:19 +0200
Subject: [PATCH] Split load_conffile

---
 src/syslogd.c |  117 +++++++++++++++++++++++++++++++---------------------------
 1 file changed, 64 insertions(+), 53 deletions(-)

--- a/src/syslogd.c
+++ b/src/syslogd.c
@@ -251,6 +251,7 @@ void die (int);
 void doexit (int);
 void domark (int);
 void fprintlog (struct filed *, const char *, int, const char *);
+static int load_conffile (const char *, struct filed **);
 void init (int);
 void logerror (const char *);
 void logmsg (int, const char *, const char *, int);
@@ -1697,12 +1698,11 @@ die (int signo)
   exit (EXIT_SUCCESS);
 }
 
-/* INIT -- Initialize syslogd from configuration table.  */
-void
-init (int signo _GL_UNUSED_PARAMETER)
+static int
+load_conffile (const char *filename, struct filed **nextp)
 {
   FILE *cf;
-  struct filed *f, *next, **nextp;
+  struct filed *f;
   char *p;
 #ifndef LINE_MAX
 # define LINE_MAX 2048
@@ -1712,63 +1712,19 @@ init (int signo _GL_UNUSED_PARAMETER)
   char *cline;
   int cont_line = 0;
 
-  dbg_printf ("init\n");
-
-  /* Close all open log files.  */
-  Initialized = 0;
-  for (f = Files; f != NULL; f = next)
-    {
-      int j;
-
-      /* Flush any pending output.  */
-      if (f->f_prevcount)
-	fprintlog (f, LocalHostName, 0, (char *) NULL);
-
-      switch (f->f_type)
-	{
-	case F_FILE:
-	case F_TTY:
-	case F_CONSOLE:
-	case F_PIPE:
-	  free (f->f_un.f_fname);
-	  close (f->f_file);
-	  break;
-	case F_FORW:
-	case F_FORW_SUSP:
-	case F_FORW_UNKN:
-	  free (f->f_un.f_forw.f_hname);
-	  break;
-	case F_USERS:
-	  for (j = 0; j < f->f_un.f_user.f_nusers; ++j)
-	    free (f->f_un.f_user.f_unames[j]);
-	  free (f->f_un.f_user.f_unames);
-	  break;
-	}
-      free (f->f_prevhost);
-      next = f->f_next;
-      free (f);
-    }
-  Files = NULL;
-  nextp = &Files;
-
-  facilities_seen = 0;
-
   /* Open the configuration file.  */
-  cf = fopen (ConfFile, "r");
+  cf = fopen (filename, "r");
   if (cf == NULL)
     {
-      dbg_printf ("cannot open %s\n", ConfFile);
+      dbg_printf ("cannot open %s\n", filename);
       *nextp = (struct filed *) calloc (1, sizeof (*f));
       cfline ("*.ERR\t" PATH_CONSOLE, *nextp);
       (*nextp)->f_next = (struct filed *) calloc (1, sizeof (*f));
       cfline ("*.PANIC\t*", (*nextp)->f_next);
       Initialized = 1;
-      return;
+      return 1;
     }
 
-  /* Foreach line in the conf table, open that file.  */
-  f = NULL;
-
   /* Allocate a buffer for line parsing.  */
   cbuf = malloc (line_max);
   if (cbuf == NULL)
@@ -1776,7 +1732,7 @@ init (int signo _GL_UNUSED_PARAMETER)
       /* There is no graceful recovery here.  */
       dbg_printf ("cannot allocate space for configuration\n");
       fclose (cf);
-      return;
+      return 0;
     }
   cline = cbuf;
 
@@ -1817,7 +1773,7 @@ init (int signo _GL_UNUSED_PARAMETER)
 	      dbg_printf ("cannot allocate space configuration\n");
 	      fclose (cf);
 	      free (cbuf);
-	      return;
+	      return 0;
 	    }
 	  else
 	    cbuf = tmp;
@@ -1864,6 +1820,61 @@ init (int signo _GL_UNUSED_PARAMETER)
   fclose (cf);
   free (cbuf);
 
+  return 1;
+}
+
+/* INIT -- Initialize syslogd from configuration table.  */
+void
+init (int signo _GL_UNUSED_PARAMETER)
+{
+  struct filed *f, *next, **nextp;
+
+  dbg_printf ("init\n");
+
+  /* Close all open log files.  */
+  Initialized = 0;
+  for (f = Files; f != NULL; f = next)
+    {
+      int j;
+
+      /* Flush any pending output.  */
+      if (f->f_prevcount)
+	fprintlog (f, LocalHostName, 0, (char *) NULL);
+
+      switch (f->f_type)
+	{
+	case F_FILE:
+	case F_TTY:
+	case F_CONSOLE:
+	case F_PIPE:
+	  free (f->f_un.f_fname);
+	  close (f->f_file);
+	  break;
+	case F_FORW:
+	case F_FORW_SUSP:
+	case F_FORW_UNKN:
+	  free (f->f_un.f_forw.f_hname);
+	  break;
+	case F_USERS:
+	  for (j = 0; j < f->f_un.f_user.f_nusers; ++j)
+	    free (f->f_un.f_user.f_unames[j]);
+	  free (f->f_un.f_user.f_unames);
+	  break;
+	}
+      free (f->f_prevhost);
+      next = f->f_next;
+      free (f);
+    }
+  Files = NULL;
+  nextp = &Files;
+
+  facilities_seen = 0;
+
+  /* Foreach line in the conf table, open that file.  */
+  f = NULL;
+
+  load_conffile (ConfFile, nextp);
+
   Initialized = 1;
 
   if (Debug)
