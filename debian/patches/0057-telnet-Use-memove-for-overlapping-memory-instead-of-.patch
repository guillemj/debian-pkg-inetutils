From 7d09a0a9d9bfff6d907863076109c77cb2d2f8a0 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Tim=20R=C3=BChsen?= <tim.ruehsen@gmx.de>
Date: Sun, 1 Mar 2020 11:51:53 +0100
Subject: [PATCH 57/64] telnet: Use memove for overlapping memory instead of
 strncpy

---
 ChangeLog         | 14 ++++++++++++++
 telnet/commands.c |  6 +++---
 2 files changed, 17 insertions(+), 3 deletions(-)

diff --git a/ChangeLog b/ChangeLog
index 693ad545..ae05b15d 100644
--- a/ChangeLog
+++ b/ChangeLog
@@ -1,3 +1,17 @@
+2020-04-27  Tim RÃ¼hsen  <tim.ruehsen@gmx.de>
+
+	telnet: Use memove for overlapping memory instead of strncpy.
+
+	Overlapping source and destination buffers are not supported
+	by strncpy and give undefined results.
+
+	7.24.2.3 of ISO/IEC 9899:201x:
+	"If  copying  takes  place  between  objects  thatoverlap,
+	the behavior is undefined."
+
+	* telnet/commands.c (cmds): Use memove for overlapping memory
+	instead of strncpy.
+
 2020-04-05  Mats Erik Andersson  <gnu@gisladisker.se>
 
 	Support for libidn2 in addition to libidn.
diff --git a/telnet/commands.c b/telnet/commands.c
index e69fcddf..88a9fb1e 100644
--- a/telnet/commands.c
+++ b/telnet/commands.c
@@ -3110,11 +3110,11 @@ cmdrc (char *m1, char *m2)
 	  if (isspace (line[0]))
 	    continue;
 	  if (strncasecmp (line, m1, l1) == 0)
-	    strncpy (line, &line[l1], sizeof (line) - l1);
+	    memmove (line, &line[l1], strlen(&line[l1]) + 1);
 	  else if (strncasecmp (line, m2, l2) == 0)
-	    strncpy (line, &line[l2], sizeof (line) - l2);
+	    memmove (line, &line[l2], strlen(&line[l2]) + 1);
 	  else if (strncasecmp (line, "DEFAULT", 7) == 0)
-	    strncpy (line, &line[7], sizeof (line) - 7);
+	    memmove (line, &line[7], strlen(&line[7]) + 1);
 	  else
 	    continue;
 	  if (line[0] != ' ' && line[0] != '\t' && line[0] != '\n')
-- 
2.28.0.163.g6104cc2f0b6

