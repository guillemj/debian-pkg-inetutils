From ec8c9a31b46d325a2c1147dacd43971405e97c5d Mon Sep 17 00:00:00 2001
From: Mats Erik Andersson <gnu@gisladisker.se>
Date: Sat, 15 Aug 2015 20:56:26 +0200
Subject: [PATCH 12/42] telnetd: Premature connection closure.

A change, part of 0b7e8687, but secondary to its
intention, turned out to cause service rejects during
conditions akin to connection flooding.  Revert this
particular part to gain established, good behaviour
on GNU/Linux.
Reported in `bug-inetutils/2015-07/msg00006.html'.
---
 ChangeLog         | 18 ++++++++++++++++++
 telnetd/telnetd.c |  8 +++++++-
 telnetd/utility.c |  8 ++++++++
 3 files changed, 33 insertions(+), 1 deletion(-)

diff --git a/telnetd/telnetd.c b/telnetd/telnetd.c
index faecc072..0bf102ac 100644
--- a/telnetd/telnetd.c
+++ b/telnetd/telnetd.c
@@ -662,7 +662,13 @@ telnetd_run (void)
       if (FD_ISSET (pty, &ibits))
 	{
 	  /* Something to read from the pty... */
-	  if (pty_read () <= 0)
+
+	  /* Observe that pty_read() is masking a few select
+	   * read errors with the return value 0.  Let them
+	   * pass for further manipulation.  Issue reported in
+	   * http://lists.gnu.org/archive/html/bug-inetutils/2015-07/msg00006.html
+	   */
+	  if (pty_read () < 0)
 	    break;
 
 	  /* The first byte is now TIOCPKT data.  Peek at it.  */
diff --git a/telnetd/utility.c b/telnetd/utility.c
index e7ffb8ed..e493dff2 100644
--- a/telnetd/utility.c
+++ b/telnetd/utility.c
@@ -372,6 +372,14 @@ pty_input_putback (const char *str, size_t len)
   return 0;
 }
 
+/* pty_read()
+ *
+ * Read errors EWOULDBLOCK, EAGAIN, and EIO are
+ * tweeked into reporting zero bytes input.
+ * In particular, EIO is known to appear when
+ * reading off the master side, before having
+ * an active slave side.
+ */
 int
 pty_read (void)
 {
-- 
2.20.1.791.gb4d0f1c61a

